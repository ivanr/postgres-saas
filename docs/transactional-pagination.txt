
Transactional Pagination
========================

HOLD cursors are interesting, but they are bound to the database connection that
created them. Defeats the point of keeping the results on the server.

We can replicate the functionality of the HOLD cursors perhaps? Advantage: the new
table can be queried as any other table.

- SELECT into a new table

- Is it possible to somehow get the first N results quickly (e.g., to display
  to the user) while we continue to process the entire result? Maybe possible
  via cursors: create a cursor, read the first page, then materialise the
  cursor into a new table?

- Use garbage collection to delete stale tables; absolute timeout. pg_cron? We can
  probably use the catalog to avoid having separate accounting. Inactivity timeout?

  https://www.postgresql.org/docs/current/monitoring-stats.html#MONITORING-PG-STAT-ALL-TABLES-VIEW

- Option to explicitly delete the table to reclaim the space immediately?

- Use a different tablespace, put on a less durable filesystem?

- If using UNLOGGED we get better performance, but no replication

- Perhaps this solution can be abstracted so that there is a separate
  Postgres server that we query through when we want this sort of thing.
  I suppose we could improve the performance of this separate instance
  further because we don't need strong durability for these. See postgres_fdw.